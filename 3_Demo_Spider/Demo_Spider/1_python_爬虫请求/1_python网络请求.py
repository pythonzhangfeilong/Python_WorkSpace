# 1、HTTP和HTTPS
'''
    HTTP的全称是：Hyper Text Transfer Protocol，中文名字是超文本传输协议，HTTP协议是用于从网络传输超文本数据到本地浏览器
                 的传送协议，它能保证高效而准确地传送超文本文档

    HTTPS的全称是：Hyper Text Transfer Protocol over Secure Socket Layer，是一安全为目标的HTTP通道，简单的来说就是
                 HTTP的安全版，就是在HTTP的下面加入SSL层，简称HTTPS
'''

# 2、HTTP的请求过程
'''
        客         ------------->request(请求)                  服
        户                                                      务
        端         <-------------response(响应)                 器
        
        
点击F12在network中列表中每一列的含义
    第一列Name：请求的名称，一般会将URL的最后一部分内容当作名称。
    第二列Status：响应的状态码，这里显示为200，代表响应是正常的。通过状态码，可以判断发送了请求之后是否得到了正常的响应。
    第三列Type：请求的文档类型。这里为document，代表我们这次请求的是一个HTML文档，内容就是一些HTML代码。
    第四列Initiator：请求源。用来标记请求是由哪个对象或进程发起的。
    第五列Size：从服务器下载的文件和请求的资源大小。如果是从缓存中取得的资源，则该列会显示from cache。
    第六列Time：发起请求到获取响应所用的总时间。
    第七列Waterfall：网络请求的可视化瀑布流。       
'''

# 3、请求:请求是由客户端向服务端发生请求，分为四部分内容，分别是：请求方法（Request Method）、请求的网址（Request URL）、请求头（Request Headers）、请求体（Request Body）。
'''
    常见的请求方法有俩种GET和POST:
        在浏览器中直接输入URL并回车，这便发起了一个GET请求，请求的参数会直接包含到URL里。例如，在百度中搜索Python，这就
        是一个GET请求，链接为https://www.baidu.com/s?wd=Python，其中URL中包含了请求的参数信息，这里参数wd表示要搜寻的
        关键字。POST请求大多在表单提交时发起。比如，对于一个登录表单，输入用户名和密码后，点击“登录”按钮，这通常会发起一
        个POST请求，其数据通常以表单的形式传输，而不会体现在URL中。
    GET和POST请求的区别：
        GET请求的参数包含在url中，数据可以在url中看到，而POST请求的url则不会包含这些数据，数据都是通过表单传输的，包含在请求体中
            GET请求提交的数据最多只有1024字节，而POST没有限制
        一般来说，登录时，需要提交用户名和密码，其中包含了敏感信息，使用GET方式请求的话，密码就会暴露在URL里面，造成密码泄露，
            所以这里最好以POST方式发送。上传文件时，由于文件内容比较大，也会选用POST方式。
    
    方法	                描述
    GET	                请求页面，并返回页面内容
    HEAD	            类似于GET请求，只不过返回的响应中没有具体的内容，用于获取报头
    POST	            大多用于提交表单或上传文件，数据包含在请求体中
    PUT	                从客户端向服务器传送的数据取代指定文档中的内容
    DELETE	            请求服务器删除指定的页面
    CONNECT	            把服务器当作跳板，让服务器代替客户端访问其他网页
    OPTIONS	            允许客户端查看服务器的性能
    TRACE	            回显服务器收到的请求，主要用于测试或诊断
    
    请求的网址：
        请求的网址，即统一资源定位符url,它可以唯一确定想请求的资源
        
    请求头
        请求头，用来说明服务器要使用的附加信息，比较重要的信息有Cookie、Referer、User-Agent等。下面简要说明一些常用的头信息。
        Accept：请求报头域，用于指定客户端可接受哪些类型的信息。
        Accept-Language：指定客户端可接受的语言类型。
        Accept-Encoding：指定客户端可接受的内容编码。
        Host：用于指定请求资源的主机IP和端口号，其内容为请求URL的原始服务器或网关的位置。从HTTP 1.1版本开始，请求必须包含此内容。
        Cookie：也常用复数形式 Cookies，这是网站为了辨别用户进行会话跟踪而存储在用户本地的数据。它的主要功能是维持当前访问会话。
            例如，我们输入用户名和密码成功登录某个网站后，服务器会用会话保存登录状态信息，后面我们每次刷新或请求该站点的其他页面时，
            会发现都是登录状态，这就是Cookies的功劳。Cookies里有信息标识了我们所对应的服务器的会话，每次浏览器在请求该站点的页面时，
            都会在请求头中加上Cookies并将其发送给服务器，服务器通过Cookies识别出是我们自己，并且查出当前状态是登录状态，所以返回结果
            就是登录之后才能看到的网页内容。
        Referer：此内容用来标识这个请求是从哪个页面发过来的，服务器可以拿到这一信息并做相应的处理，如作来源统计、防盗链处理等。
        User-Agent：简称UA，它是一个特殊的字符串头，可以使服务器识别客户使用的操作系统及版本、浏览器及版本等信息。在做爬虫时加上此信息，
            可以伪装为浏览器；如果不加，很可能会被识别出为爬虫。
        Content-Type：也叫互联网媒体类型（Internet Media Type）或者MIME类型，在HTTP协议消息头中，它用来表示具体请求中的媒体类型信息。
            例如，text/html代表HTML格式，image/gif代表GIF图片，application/json代表JSON类型，更多对应关系可以查看此对照
            表：http://tool.oschina.net/commons。
        因此，请求头是请求的重要组成部分，在写爬虫时，大部分情况下都需要设定请求头。
    请求体
        请求体一般承载的内容是POST请求中的表单数据，而对于GET请求，请求体则为空
    在爬虫中，如果要构造POST请求，需要使用正确的Content-Type，并了解各种请求库的各个参数设置时使用的是哪种Content-Type，不然可能
        会导致POST提交后无法正常响应。
    
    4、响应：由服务器返回给客户端
    
        
'''





















