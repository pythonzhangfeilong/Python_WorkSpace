# 1、模拟登陆
'''
    用脚本向服务器提交登陆信息，获得登陆后的资源和权限，尽进行下载或者操作
    模拟登陆的核心和编写网站登陆功能的核心是一体的都是对cookie和用户身份的校验和可持续访问的操作
'''

# 2、模拟登陆的基本思路：
'''
基本模拟登陆的思路
     |------------>1、携带登陆信息request---------------------->|
     |                                                         | 
     |                                                         |
agent|<------------2、下发cookie或者其他身份校验<-----------web server
     |                                                         |
     |                                                         |
     |------------>3、携带cookie或校验进行登录后的操作---------->|
    
最正常的模拟登陆
     |------------>1、request请求登陆页面----------------------->|
     |                                                          |
     |                                                         \|/
     |<------------2、下发登陆页面的cookie或者其他身份校验<----web server
     |                                                    /|\   |  /|\
     |                                                     |    |   |
     |------------->3、携带cookie或校验进行登陆--------------     |   |
agent|                                                          |   |
     |                                                          |   |
     |<-------------4、下发登陆的校验<--------------------------\|/  |
     |                                                              |
     |                                                              |
     |------------->5、进行操作------------------------------------->|  
'''

# 3、常见的防止模拟登陆的方法
'''
    1、加入hidden标签，csdn类型的网站。
    处理：爬取登陆页面，匹配hidden标签的值，然后携带提交
    2、加入js加密，hidden提交的东西是js动态加密的,数据动态加载，QQ、CSDN
    处理：强大的js处理能力，分析算法，提交给python重写，来获取值
         Selenium驱动js，通常使用phanomjs来不打开网页驱动js登陆
    3、验证码
    处理：使用Opencv(图像处理的库)+PIL+numpy 进行图像识别
	      弹出验证码，保存验码，人眼识别，提交验证码
    4、定时发送响应，隐藏登陆接口
    处理：模拟登陆的目标，获取账号和密码
'''



































